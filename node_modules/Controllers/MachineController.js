var Machines= require('DB.Modules/Machines'),
	v 		= require('Validate-alpha'),
	layout 	= require('Layout');
/*
 * Group Controller
 */
MachineController = {
	all: function(){
		Machines.where('deleted IS NULL', 10, function(opt){
			opt.routeName = "machines-all";
			layout.LoadContent('machines/all', opt);
		});
	},
	getAdd: function(options){
		layout.LoadContent('machines/add', options);
	},
	postAdd: function(){
		// collect data
		var data = {
			name : 					doc.getElementById('machineName').value,
			share_ratio: 			doc.getElementById('machineRatio').value,
			serial_number: 			doc.getElementById('machineSerial').value,
			manufacturing_country: 	doc.getElementById('machineCountry').value,
			purchasing_price: 		doc.getElementById('machinePrice').value
		},

		// validate data
		val = {
			name: 					['required', 'min:3', 'alphanum', 'unique:machines,name'],
			share_ratio: 			['numaric'],
			manufacturing_country: 	['alpha'],
			purchasing_price: 		['required', 'numaric']
		};
		v.make(data, val, function(errors){
			var keys = Object.keys(errors),
				length = keys.length;
			if (length) {
				var html = "";
				for (var i=0; i < length; i++) {
					html += "<h3>"+ keys[i] +"</h3>";
					html += "<ul>";
						for (var z=0; z < errors[keys[i]].length; z++) {
							html += "<li>"+ errors[keys[i]][z] +"</li>";
						};
					html += "</ul>";
				};
				var options = {
					inputs: data,
					errors: errors
				};
				redirect('machines-add', options);
				HCalert({
					type: "error", // success, updated, error
					headerText: "Added Failed",
					bodyContent: html,
					hide: function(){}
				});
			} else {
				// save data
				var obj = {
					name : 			data.name,
					share_ratio : 	data.share_ratio,
					serial : 		data.serial_number,
					country : 		data.manufacturing_country,
					price : 		data.purchasing_price,
					created_at: 	Machines.currentDateTime(),
					updated_at: 	Machines.currentDateTime()
				};
				Machines.create(obj, function(newId){
					HCalert({
						type: "success", // success, updated, error
						headerText: "Machine Added",
						bodyContent: "<p>a new Machine ("+ data.name +") added to the system Successfully.</p>",
						hide: function(){}
					});
				});
			}
		});
	},
	profile: function(options){
		Machines.find(options.id, function(rows){
			options.data = rows[0];
			layout.LoadContent('machines/profile', options);
		});
	},
	update: function(options){
		// collect data
		var data = {
			name : 					doc.getElementById('machineName').value,
			share_ratio: 			doc.getElementById('machineRatio').value,
			serial_number: 			doc.getElementById('machineSerial').value,
			manufacturing_country: 	doc.getElementById('machineCountry').value,
			purchasing_price: 		doc.getElementById('machinePrice').value
		},

		// validate data
		val = {
			name: 					['required', 'min:3', 'alphanum', 'unique:machines,name,'+ options.id],
			share_ratio: 			['numaric'],
			manufacturing_country: 	['alpha'],
			purchasing_price: 		['required', 'numaric']
		};
		v.make(data, val, function(errors){
			var keys = Object.keys(errors),
				length = keys.length;
			if (length) {
				var html = "";
				for (var i=0; i < length; i++) {
					html += "<h3>"+ keys[i] +"</h3>";
					html += "<ul>";
						for (var z=0; z < errors[keys[i]].length; z++) {
							html += "<li>"+ errors[keys[i]][z] +"</li>";
						};
					html += "</ul>";
				};
				var retrn = {
					inputs: data,
					errors: errors,
					id: options.id
				};
				redirect('machines-profile', retrn);
				HCalert({
					type: "error", // success, updated, error
					headerText: "Updated Failed",
					bodyContent: html,
					hide: function(){}
				});
			} else {
				// save data
				var obj = {
					name : 			data.name,
					share_ratio : 	data.share_ratio,
					serial : 		data.serial_number,
					country : 		data.manufacturing_country,
					price : 		data.purchasing_price,
					updated_at: 	Machines.currentDateTime()
				};
				Machines.update(options.id, obj, function(affectedId){
					HCalert({
						type: "success", // success, updated, error
						headerText: "Machine Updated",
						bodyContent: "<p>machine ("+ data.name +") Updated Successfully.</p>",
						hide: function(){}
					});
				});
			}
		});
	},
	remove: function(options){
		HCalert({
			type: "error", // success, updated, error
			headerText: "Deleteing Machine",
			bodyContent: "<p>are you sure you want to delete this Machine!!</p><p>you CAN'T undo this operation!!!</p>",
			hide: function(){},
			ok: function(){
				Machines.softDelete(options.id, function(affecedId){
					redirect('machines-all');
					HCalert({
						type: "success", // success, updated, error
						headerText: "Machine Deleted",
						bodyContent: "<p>machine deleted from the system Successfully.</p>",
						hide: function(){}
					});
				});
			}
		});
	}
}
module.exports = MachineController;
