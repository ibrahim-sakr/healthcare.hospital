/*
 * Patients Controller
 */
var Patients 	= require('DB.Modules/Patients'),
	Groups 		= require('DB.Modules/Groups'),
	v 			= require('Validate-alpha'),
	Calendar 	= require('Calendar'),
	layout 		= require('Layout');

var PatientController = {
	all: function(){
		Patients.where('active = 1 AND deleted IS NULL', 10, function(opt){
			opt.routeName = "patients-all";
			layout.LoadContent('patients/all', opt);
		});
	},
	profile: function(options){
		var sql =
		"SELECT\
			patients.*,\
			IF(patients.group_id = 0, 'private', groups.name) AS Gname\
		FROM patients\
			LEFT JOIN groups ON patients.group_id = groups.id\
		WHERE patients.id = ?;\
		SELECT * FROM abdomen WHERE patient_id = ?;\
		SELECT * FROM arm_left WHERE patient_id = ?;\
		SELECT * FROM arm_right WHERE patient_id = ?;\
		SELECT * FROM butocks WHERE patient_id = ?;\
		SELECT * FROM obesity WHERE patient_id = ?;\
		SELECT * FROM thight_left WHERE patient_id = ?;\
		SELECT * FROM thight_right WHERE patient_id = ?;",
		array = [];
		for (var i=0; i < 8; i++) array.push(options.id);
		Patients.global(sql, array, function(rows){
			var currDate = new Date(),
				theMonth = currDate.getMonth(),
				theYear = currDate.getFullYear();

			options.data 			= rows[0][0];
			options.abdomen 		= rows[1];
			options.arm_left 		= rows[2];
			options.arm_right 		= rows[3];
			options.butocks 		= rows[4];
			options.obesity 		= rows[5];
			options.thight_left 	= rows[6];
			options.thight_right 	= rows[7];
			options.date 			= Patients.currentDate();

			layout.LoadContent('patients/profile', options);
			Calendar.newDate(rows[0].name, rows[0].id);
			Calendar.fillYears();
			Calendar.drawCal(theMonth, theYear);
			if (window.jQuery) {
				window.jQuery('#obesity').DataTable();
			} else {
				console.log('fail');
			};



			console.log(options);
		});
	},
	update: function(options){
		// collect data

		// validate data

		// save data
	},
	getCreate: function(options){
		Groups.where('deleted IS NULL', '', function(opt){
			options.groups = opt.rows;
			layout.LoadContent('patients/add', options);
			console.log(options);
		});
	},
	postCreate: function(){
		// collect data
		var data = {
			group: 				doc.getElementById('groupId').value,
			name: 				doc.getElementById('patientName').value,
			age: 				doc.getElementById('patientAge').value,
			gender: 			doc.getElementById('patientGender').value,
			address: 			doc.getElementById('patientAddress').value,
			occupation: 		doc.getElementById('patientOccupation').value,
			phone: 				doc.getElementById('patientPhone').value,
			habits: 			doc.getElementById('patientHabits').value,
			onset_of_treatment: doc.getElementById('patientTreatment').value,
			onset: 				doc.getElementById('patientOnset').value,
			course: 			doc.getElementById('patientCourse').value,
			duration: 			doc.getElementById('patientDuration').value,
			main_problem: 		doc.getElementById('patientProblem').value,
			past_history: 		doc.getElementById('patientHistory').value,
			cash: 				doc.getElementById('patientCash').value
		};
		// get cash from db
		Patients.global("SELECT value FROM options WHERE name = ?", ['cash'], function(rows){
			// validate data
			obj = {
				name: 		['required', 'min:3', 'alpha'],
				age: 		['required', 'numaric'],
				address: 	['required'],
				phone: 		['required', 'numaric', 'unique:patients,phone'],
				cash: 		['required', 'numaric', 'min:' + rows[0].value]
			};
			v.make(data, obj, function(errors){
				var keys = Object.keys(errors),
					length = keys.length;
				if (length) {
					var html = "";
					for (var i=0; i < length; i++) {
						html += "<h3>"+ keys[i] +"</h3>";
						html += "<ul>";
							for (var z=0; z < errors[keys[i]].length; z++) {
								html += "<li>"+ errors[keys[i]][z] +"</li>";
							};
						html += "</ul>";
					};
					var options = {
						inputs: data,
						errors: errors
					};
					redirect('patients-add', options);
					HCalert({
						type: "error", // success, updated, error
						headerText: "Create Patient Failed",
						bodyContent: html,
						hide: function(){}
					});
				} else {
					patient = {
						name: data.name,
						age: data.age,
						gender: data.gender,
						phone: data.phone,
						address: data.address,
						occupation: data.occupation,
						onset_treatment: data.onset_of_treatment,
						onset: data.onset,
						habits: data.habits,
						course: data.course,
						duration: data.duration,
						problem: data.main_problem,
						past: data.past_history,
						group_id: data.group,
						active: 1,
						created_at: Patients.currentDateTime(),
						updated_at: Patients.currentDateTime()
					};
					var columns = "", values = [];
					for (var i=0, n=Object.keys(patient); i < n.length; i++) {
						columns += n[i] + ", ";
						values.push(patient[n[i]]);
					};
					var sql = "INSERT INTO patients ("+ columns.slice(0, -2) +") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
					Patients.global(sql, values, function(){
						HCalert({
							type: "success", // success, updated, error
							headerText: "Patient Created",
							bodyContent: "<p>patient ("+ data.name +") added succssfully</p>",
							hide: function(){}
						});
					});
				}
			});
			
		});
	},
	remove: function(options){
		HCalert({
			type: "error", // success, updated, error
			headerText: "Patient Delete",
			bodyContent: "<p>are you sure you want to Delete this Patient</p><p>you can't undo this operation !!!</p>",
			hide: function(){},
			ok: function(){
				data = {deleted: 1};
				Patients.update(options.id, data, function(data){
					if (data > 0) {
						// redirect to all patients
						redirect('patients-all');
						// show message
						HCalert({
							type: "success", // success, updated, error
							headerText: "Patient Deleted",
							bodyContent: "<p>patient deleted succssfully</p>",
							hide: function(){}
						});
					} else {

					};
				});
			}
		});
	}
}
module.exports = PatientController;
