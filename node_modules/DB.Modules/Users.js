var pModule = require('DB.Modules/PModule'),
	db 		= require('DB.Modules/Database'),
	bcrypt 	= require('bcryptjs');

/*
 * User Module
 */
function Users(){
	this.table = "users";
	this.exist = function(username, password, cb){
		var sql = "SELECT users.id, users.username, users.first_name, users.last_name, users.phone, users.password, users.created_at, users.updated_at, users.role_id, roles.name AS Rname FROM "+ this.table +" LEFT JOIN roles ON users.role_id = roles.id WHERE users.username = "+ db.db().escape(username) +" AND users.archive = 0";
		db.db().query(sql, function(err, rows, fields){
			if (err) throw err;
			if (rows.length) {
				// check hash
				bcrypt.compare(password, rows[0].password, function(err, res){
					if (res) {
						var userDetails = {};
						userDetails.id 			= rows[0].id;
						userDetails.username 	= rows[0].username;
						userDetails.first_name 	= rows[0].first_name;
						userDetails.last_name 	= rows[0].last_name;
						userDetails.phone 		= rows[0].phone;
						userDetails.created_at 	= rows[0].created_at;
						userDetails.updated_at 	= rows[0].updated_at;
						userDetails.role 		= {
							'id': rows[0].role_id,
							'name': rows[0].Rname
						};
						var permissions = "SELECT permissions.name FROM users LEFT JOIN role_permission ON users.role_id = role_permission.role_id LEFT JOIN roles ON role_permission.role_id = roles.id LEFT JOIN permissions ON role_permission.permission_id = permissions.id WHERE users.id = "+ db.db().escape(userDetails.id);
						db.db().query(permissions, function(err, rows, fields){
							if (err) throw err;
							userDetails.permissions = new Array();
							for (i=0; i < rows.length; i++) {
								userDetails.permissions[i] = rows[i].name;
							};
							return cb(userDetails);
						});
					} else {
						return cb("");
					};
				});
			} else {
				return cb("");
			};
		});
	};
};
Users.prototype = new pModule();
module.exports = new Users();
